"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import environ

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
DJANGO_BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
REPO_BASE_DIR   = os.path.dirname(DJANGO_BASE_DIR)

# env module is used to parse our .env file
env = environ.Env()
env.read_env(REPO_BASE_DIR + '/.env')

DEBUG         = env.bool('DJANGO_DEBUG', False)
ALLOWED_HOSTS = env('DJANGO_ALLOWED_HOSTS', default='').split(',')
SECRET_KEY    = env('DJANGO_SECRET_KEY', default=None)
SECRET_DEPLOY_KEY = env('DJANGO_SECRET_DEPLOY_KEY', default=None)

BASE_URL = env('DJANGO_BASE_URL', default='')

# Application definition

INSTALLED_APPS = [
    'matthews',
    'deploy',
    'anora',
    'django_tables2',
    'django_filters',
    'pipeline',
    'bootstrap4',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'debug_toolbar',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(DJANGO_BASE_DIR, 'templates'),
                 os.path.join(DJANGO_BASE_DIR, 'project/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

if env('DJANGO_DB_USERNAME', default=False):
    DATABASES = {
        'default': {
            'ENGINE':  'django.db.backends.postgresql_psycopg2',
            'NAME':     env('DJANGO_DB_NAME', default=''),
            'USER':     env('DJANGO_DB_USERNAME', default=''),
            'PASSWORD': env('DJANGO_DB_PASSWORD', default=''),
            'HOST':     env('DJANGO_DB_HOST', default=''),
            'PORT':     env('DJANGO_DB_PORT', default=''),
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(REPO_BASE_DIR, 'db.sqlite3'),
        }
    }

# Caching
# https://docs.djangoproject.com/en/2.1/topics/cache/

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': 'cache:11211',
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'matthews.User'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-gb'

TIME_ZONE = 'GMT'

USE_I18N = True

USE_L10N = False

USE_TZ = True
TIME_ZONE = 'Europe/London'


# These can be defined here while the above USE_L10N is False,
# if we start using locales, see https://stackoverflow.com/a/39477478
DATE_FORMAT           = "D jS M Y"
DATETIME_FORMAT       = "H:i:s \\o\\n D jS M Y"
SHORT_DATE_FORMAT     = "j M Y"
SHORT_DATETIME_FORMAT = "H:i j M Y"


# Email via gmail smtp, cf: https://stackoverflow.com/a/23402208
EMAIL_HOST          = env('DJANGO_EMAIL_HOST', default='')
EMAIL_HOST_USER     = env('DJANGO_EMAIL_HOST_USER', default='')
EMAIL_HOST_PASSWORD = env('DJANGO_EMAIL_HOST_PASSWORD', default='')
EMAIL_PORT          = env('DJANGO_EMAIL_PORT', default='')
EMAIL_USE_TLS       = env.bool('DJANGO_EMAIL_USE_TLS', default=True)


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_ROOT = os.path.join(REPO_BASE_DIR, 'static/')
STATIC_URL = '/static/'

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'pipeline.finders.PipelineFinder',
)

STATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'
# todo - consider ManifestStorage, see: https://stackoverflow.com/a/48064722


# from https://django-pipeline.readthedocs.io/en/latest/configuration.html
PIPELINE = {
    'PIPELINE_ENABLED': True,
    'PIPELINE_COLLECTOR_ENABLED': True,
    'STYLESHEETS': {
        'main_style': {
            'source_filenames': (
                'style.scss',
            ),
            'output_filename': 'css/style.css',
        },
    },
    'JAVASCRIPT': {
        'main_js': {
            'source_filenames': (
                'main.js',
            ),
            'output_filename': 'js/main.js',
        }
    },
    'CSS_COMPRESSOR': None,
    'JS_COMPRESSOR': None,
    'COMPILERS': ['libsasscompiler.LibSassCompiler'],
}

# Table config

#DJANGO_TABLES2_TEMPLATE = 'tables2_table.html'


# =================================================================================================
# Our application settings

BLOCK_EMAIL_SENDING     = env.bool('DJANGO_BLOCK_EMAIL_SENDING', default=True)
SEND_ALL_EMAILS_TO      = env('DJANGO_SEND_ALL_EMAILS_TO', default=False)
CUSTOMER_SERVICES_EMAIL = env('DJANGO_CUSTOMER_SERVICES_EMAIL', default=None)
SYSTEM_FROM_EMAIL       = env('DJANGO_SYSTEM_FROM_EMAIL', default=False)

PASSWORD_RESET_WINDOW_SECONDS = 7 * 24 * 60 * 60  # links expire after 7 days
